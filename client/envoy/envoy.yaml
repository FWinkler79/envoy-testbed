admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: 
      address: 0.0.0.0
      port_value: 9001

static_resources:
  listeners:
  - name: http_egress # for traffic from the client to the server.
    traffic_direction: OUTBOUND
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
        # Name must match the qualified name as given here: 
        # https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-msg-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: client_egress_http
          codec_type: AUTO
          route_config:
            name: route-to-server
            virtual_hosts:
            # To test HTTP-based routing. Define a 'loopback' virtual host.
            # If the client sends a request to this Envoy instance with the 'Host' header 
            # set to 'loopback' this route will be chosen and the request is redirected
            # back to the client itself.
            - name: loopback
              domains: 
                - "loopback"
              routes:
              - match: 
                  prefix: "/"
                route:
                  host_rewrite_literal: clients
                  cluster: local

            # To test HTTP-based routing. Define an 'echo-server' virtual host.
            # If the client sends a request to this Envoy instance with the 'Host' header 
            # set to 'envoy-server' this route will be chosen and the request is forwarded 
            # to the 'echo-server-cluster' defined below.
            - name: echo-server
              domains: 
                - "*"
              routes:
              - match: 
                  prefix: "/"
                route:
                  host_rewrite_literal: echo-server
                  cluster: echo-server-cluster
          http_filters:
          - name: envoy.filters.http.router
    
  - name: http_ingress # for traffic from the server to the client.
    traffic_direction: INBOUND
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 81
    filter_chains:
    - filters:
        # Name must match the qualified name as given here: 
        # https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-msg-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager
      - name: envoy.filters.network.http_connection_manager 
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: client_ingress_http
          codec_type: AUTO
          route_config:
            name: route-to-client
            virtual_hosts:
            - name: echo-client
              domains: 
                - "*"
              routes:
              - match: 
                  prefix: "/"
                route:
                  host_rewrite_literal: echo-client
                  cluster: local
          http_filters:
          - name: envoy.filters.http.router

  clusters:
  - name: echo-server-cluster
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: echo-server-cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: server-envoy # address of server-envoy
                port_value: 81        # ingress port of server envoy
    # transport_socket:
    #   name: envoy.transport_sockets.tls
    #   typed_config:
    #     "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
    #     sni: localhost

  - name: local
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: local
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: client  # address of client application.
                port_value: 8001 # port of client application.
    # transport_socket:
    #   name: envoy.transport_sockets.tls
    #   typed_config:
    #     "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
    #     sni: localhost

